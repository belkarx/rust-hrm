    let input = r###"
[
    {
        "alias": "CTFCryptic",
        "uses": ["", ""],
        "name": "Nicholas Eric Stepan",
        "occupation": "",
        "age": ""
    },
    {
        "sensor": "left",
        "color": "#0f0"
    },
    {
        "sensor": "right",
        "luminosity": "20"
    },
    {
        "sensor": "right",
        "luminosity": "40",
        "color": "(255,0,0)"
    },
    {
        "sensor": "left",
        "luminosity": "30"
    },
    {
        "sensor": "top",
        "luminosity": "10"
    },
    {
        "sensor": "right",
        "color": "(0,0,0)"
    }
]
"###;


 alias: String,
    name: String,
    age: String,
    source: String,

let input = r##"[

    let input = r##"[
                      {
                        "sensor": "left",
                        "luminosity": "50",
                        "color": "(255,0,0)"
                      },
                      {
                        "sensor": "left",
                        "color": "#0f0"
                      },
                      {
                        "sensor": "right",
                        "luminosity": "20"
                      },
                      {
                        "sensor": "right",
                        "luminosity": "40",
                        "color": "(255,0,0)"
                      },
                      {
                        "sensor": "left",
                        "luminosity": "30"
                      },
                      {
                        "sensor": "top",
                        "luminosity": "10"
                      },
                      {
                        "sensor": "right",
                        "color": "(0,0,0)"
                      }
                    ]"##;



//The optional values
#[derive(Debug, Default)]
struct Subject {
    source: String,
    name: String, 
}

//The less optional values
#[derive(Debug, Deserialize)]
struct RawSubject {
    alias: String, //required
    uses: Uses, //required
    contact: Map<String, String>, //required
    source: Option<String>,
    contact: Option<String>,
    name: Option<String>, 
}

//Everything here is required
#[derive(Debug, Deserialize)]
struct Uses {
    form: Vec<String>,
    details: Vec<String>,
}


{
    "alias": "Cake",
    "uses": {
        "form": "Informational",
        "details": ["Goes to Interlake", "Cybersec", "Linux"]
    },
    "contact": {
        "discord": "Ahuman#0955",
        "email": "doggie0@outlook.com",
        "IRL": "Interlake"
    },
    "source": "reddit (linuxmasterrace)"
}

let obj: Map<String, Value> = parsed.as_object().unwrap().clone()
